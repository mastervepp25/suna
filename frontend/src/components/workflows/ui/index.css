/* React Flow Workflow Builder - Minimalist Vercel-style Design */

/* Container and Background */
.react-flow-container {
  background: hsl(var(--background));
  position: relative;
}

/* Base Node Styles */
.react-flow__node {
  width: 280px;
  padding: 0;
  border-radius: 8px;
  border: 1px solid hsl(var(--border));
  background: hsl(var(--card)) !important;
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  cursor: grab;
}

.react-flow__node:active {
  cursor: grabbing;
}

.react-flow__node:hover {
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  transform: translateY(-1px);
}

.react-flow__node.selected {
  border-color: hsl(var(--primary));
  box-shadow: 0 0 0 3px hsl(var(--primary) / 0.1);
}

/* Dark mode adjustments */
.dark .react-flow__node {
  border: 1px solid hsl(var(--border));
  background: hsl(var(--card)) !important;
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.3), 0 1px 2px 0 rgba(0, 0, 0, 0.2);
}

.dark .react-flow__node:hover {
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.3), 0 2px 4px -1px rgba(0, 0, 0, 0.2);
}

/* Step Node Specific */
.react-flow__node-step {
  border: 1px solid hsl(var(--border));
  background: hsl(var(--card)) !important;
}

.react-flow__node-step.has-issues {
  border-color: hsl(var(--destructive));
}

/* Condition Node Specific */
.react-flow__node-condition {
  width: 220px;
  border-radius: 12px;
  border: 1px dashed hsl(var(--border));
  background: hsl(var(--muted) / 0.3) !important;
}

.react-flow__node-condition.selected {
  border-style: solid;
  border-color: hsl(var(--primary));
  background: hsl(var(--muted) / 0.5) !important;
}

/* Node Content */
.node-content {
  padding: 16px;
}

.node-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 8px;
}

.node-title {
  font-size: 14px;
  font-weight: 600;
  color: hsl(var(--foreground));
  line-height: 1.4;
}

.node-description {
  font-size: 13px;
  color: hsl(var(--muted-foreground));
  line-height: 1.5;
  margin-bottom: 12px;
}

.node-tool-badge {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 4px 10px;
  border-radius: 6px;
  background: hsl(var(--muted));
  font-size: 12px;
  font-weight: 500;
  color: hsl(var(--muted-foreground));
  border: 1px solid hsl(var(--border));
}

/* Handles */
.react-flow__handle {
  width: 8px;
  height: 8px;
  background: hsl(var(--primary));
  border: 2px solid hsl(var(--background));
  transition: all 0.2s ease;
}

.react-flow__handle:hover {
  width: 12px;
  height: 12px;
}

.react-flow__node:hover .react-flow__handle {
  visibility: visible;
}

/* Edges */
.react-flow__edge-path {
  stroke: hsl(var(--border));
  stroke-width: 2;
}

.react-flow__edge.selected .react-flow__edge-path {
  stroke: hsl(var(--primary));
}

.react-flow__edge-label {
  font-size: 12px;
  font-weight: 500;
}

/* Controls */
.react-flow__controls {
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  border: 1px solid hsl(var(--border));
  border-radius: 8px;
  background: hsl(var(--card));
}

.react-flow__controls-button {
  background: hsl(var(--card));
  border-bottom: 1px solid hsl(var(--border));
  color: hsl(var(--muted-foreground));
}

.react-flow__controls-button:hover {
  background: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.react-flow__controls-button:last-child {
  border-bottom: none;
}

/* Panel */
.react-flow__panel {
  margin: 16px;
}

.workflow-panel-actions {
  display: flex;
  gap: 8px;
  background: hsl(var(--background) / 0.8);
  backdrop-filter: blur(10px);
  padding: 12px;
  border-radius: 8px;
  border: 1px solid hsl(var(--border));
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
}

.workflow-panel-selection {
  margin-top: 8px;
  padding: 8px 12px;
  background: hsl(var(--primary) / 0.1);
  border: 1px solid hsl(var(--primary) / 0.2);
  border-radius: 6px;
  font-size: 13px;
  color: hsl(var(--primary));
  font-weight: 500;
}

/* Background */
.react-flow__background-pattern {
  stroke: hsl(var(--border) / 0.3);
}

/* Animations */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(4px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.react-flow__node {
  animation: fadeIn 0.3s ease-out;
}

/* Node Actions */
.node-actions {
  position: absolute;
  top: 8px;
  right: 8px;
  opacity: 0;
  transition: opacity 0.2s ease;
}

.react-flow__node:hover .node-actions {
  opacity: 1;
}

/* Drag Preview */
.react-flow__node.dragging {
  opacity: 0.5;
  cursor: grabbing;
}

/* Selection Box */
.react-flow__selection {
  background: hsl(var(--primary) / 0.08);
  border: 1px solid hsl(var(--primary) / 0.3);
}

/* Minimap */
.react-flow__minimap {
  background: hsl(var(--background));
  border: 1px solid hsl(var(--border));
  border-radius: 8px;
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
}

.react-flow__minimap-mask {
  fill: hsl(var(--muted));
}

.react-flow__minimap-node {
  fill: hsl(var(--muted-foreground));
}

/* Condition Node Styles */
.condition-node-content {
  padding: 12px;
  text-align: center;
}

.condition-type-badge {
  display: inline-flex;
  align-items: center;
  padding: 2px 8px;
  border-radius: 4px;
  font-size: 11px;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  margin-bottom: 8px;
}

.condition-type-if {
  background: hsl(var(--primary) / 0.1);
  color: hsl(var(--primary));
}

.condition-type-elseif {
  background: hsl(var(--warning) / 0.1);
  color: hsl(var(--warning));
}

.condition-type-else {
  background: hsl(var(--muted));
  color: hsl(var(--muted-foreground));
}

.condition-expression {
  font-size: 12px;
  color: hsl(var(--foreground));
  font-style: italic;
  word-break: break-word;
}

/* Empty State */
.workflow-empty-state {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  color: hsl(var(--muted-foreground));
}

/* Loading State */
.workflow-loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* Error State */
.node-error {
  position: absolute;
  bottom: -24px;
  left: 50%;
  transform: translateX(-50%);
  font-size: 11px;
  color: hsl(var(--destructive));
  white-space: nowrap;
}

/* Tooltips */
.workflow-tooltip {
  position: absolute;
  background: hsl(var(--popover));
  border: 1px solid hsl(var(--border));
  border-radius: 6px;
  padding: 8px 12px;
  font-size: 12px;
  color: hsl(var(--popover-foreground));
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  z-index: 1000;
  pointer-events: none;
}

/* Edge Button */
.edge-button {
  pointer-events: all;
  cursor: pointer;
  position: absolute;
  background: hsl(var(--background));
  border: 1px solid hsl(var(--border));
  width: 20px;
  height: 20px;
  border-radius: 50%;
  color: hsl(var(--muted-foreground));
  font-size: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.edge-button:hover {
  background: hsl(var(--accent));
  border-color: hsl(var(--primary));
  color: hsl(var(--primary));
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transform: scale(1.1);
}

.edge-button:active {
  transform: scale(0.95);
}

/* Edge styles */
.react-flow__edge-workflow .react-flow__edge-path {
  stroke: hsl(var(--border));
  stroke-width: 2;
  transition: stroke 0.2s ease;
}

.react-flow__edge-workflow:hover .react-flow__edge-path {
  stroke: hsl(var(--muted-foreground));
}

.react-flow__edge-workflow.selected .react-flow__edge-path {
  stroke: hsl(var(--primary));
  stroke-width: 2.5;
} 